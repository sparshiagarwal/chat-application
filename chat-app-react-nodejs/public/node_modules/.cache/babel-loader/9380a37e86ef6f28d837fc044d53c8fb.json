{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparshi Agarwal\\\\Desktop\\\\real_time_chat_App\\\\chat-app-react-nodejs\\\\public\\\\src\\\\pages\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n\n  const navigate = useNavigate();\n  const socket = useRef();\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)));\n    }\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", currentUser._id);\n    }\n  }, [currentUser]);\n  useEffect(async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate(\"/setAvatar\");\n      }\n    }\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Contacts, {\n          contacts: contacts,\n          changeChat: handleChatChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n          currentChat: currentChat,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"G1vMPFZ4XbOFCZ+tx5d7hVlG7ns=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #FFFFFF;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Sparshi Agarwal/Desktop/real_time_chat_App/chat-app-react-nodejs/public/src/pages/Chat.jsx"],"names":["React","useEffect","useState","useRef","axios","useNavigate","io","styled","allUsersRoute","host","ChatContainer","Contacts","Welcome","Chat","navigate","socket","contacts","setContacts","currentChat","setCurrentChat","undefined","currentUser","setCurrentUser","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","JSON","parse","current","emit","_id","isAvatarImageSet","data","get","handleChatChange","chat","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,oBAApC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGZ,MAAM,EAArB;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACkB,SAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAACkB,SAAD,CAA9C;AACAnB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACsB,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CAAL,EAAgE;AAC9Db,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAFD,MAEO;AACLQ,MAAAA,cAAc,CACZ,MAAMM,IAAI,CAACC,KAAL,CACJN,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADI,CADM,CAAd;AAKD;AACF,GAVQ,EAUN,EAVM,CAAT;AAWA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAJ,EAAiB;AACfN,MAAAA,MAAM,CAACe,OAAP,GAAiBxB,EAAE,CAACG,IAAD,CAAnB;AACAM,MAAAA,MAAM,CAACe,OAAP,CAAeC,IAAf,CAAoB,UAApB,EAAgCV,WAAW,CAACW,GAA5C;AACD;AACF,GALQ,EAKN,CAACX,WAAD,CALM,CAAT;AAOApB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIoB,WAAJ,EAAiB;AACf,UAAIA,WAAW,CAACY,gBAAhB,EAAkC;AAChC,cAAMC,IAAI,GAAG,MAAM9B,KAAK,CAAC+B,GAAN,CAAW,GAAE3B,aAAc,IAAGa,WAAW,CAACW,GAAI,EAA9C,CAAnB;AACAf,QAAAA,WAAW,CAACiB,IAAI,CAACA,IAAN,CAAX;AACD,OAHD,MAGO;AACLpB,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACD;AACF;AACF,GATQ,EASN,CAACO,WAAD,CATM,CAAT;;AAUA,QAAMe,gBAAgB,GAAIC,IAAD,IAAU;AACjClB,IAAAA,cAAc,CAACkB,IAAD,CAAd;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAErB,QAApB;AAA8B,UAAA,UAAU,EAAEoB;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGlB,WAAW,KAAKE,SAAhB,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,aAAD;AAAe,UAAA,WAAW,EAAEF,WAA5B;AAAyC,UAAA,MAAM,EAAEH;AAAjD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;GAnDuBF,I;UACLR,W;;;KADKQ,I;AAqDxB,MAAMyB,SAAS,GAAG/B,MAAM,CAACgC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMD,S","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nimport styled from \"styled-components\";\r\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\r\nimport ChatContainer from \"../components/ChatContainer\";\r\nimport Contacts from \"../components/Contacts\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\nexport default function Chat() {\r\n  const navigate = useNavigate();\r\n  const socket = useRef();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  useEffect(async () => {\r\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setCurrentUser(\r\n        await JSON.parse(\r\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(async () => {\r\n    if (currentUser) {\r\n      if (currentUser.isAvatarImageSet) {\r\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n        setContacts(data.data);\r\n      } else {\r\n        navigate(\"/setAvatar\");\r\n      }\r\n    }\r\n  }, [currentUser]);\r\n  const handleChatChange = (chat) => {\r\n    setCurrentChat(chat);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"container\">\r\n          <Contacts contacts={contacts} changeChat={handleChatChange} />\r\n          {currentChat === undefined ? (\r\n            <Welcome />\r\n          ) : (\r\n            <ChatContainer currentChat={currentChat} socket={socket} />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .container {\r\n    height: 85vh;\r\n    width: 85vw;\r\n    background-color: #FFFFFF;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}