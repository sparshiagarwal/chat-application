{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparshi Agarwal\\\\Desktop\\\\chat_app_error\\\\chat-app-react-nodejs\\\\public\\\\src\\\\components\\\\ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput(_ref) {\n  _s();\n\n  let {\n    handleSendMsg\n  } = _ref;\n  const [msg, setMsg] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const handleEmojiPickerhideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    let message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  const sendChat = event => {\n    event.preventDefault();\n\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n          onClick: handleEmojiPickerhideShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: event => sendChat(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type your message here\",\n        onChange: e => setMsg(e.target.value),\n        value: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatInput, \"BEbOaGFGj4PENMmZ+3rZXgHEfFI=\");\n\n_c = ChatInput;\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Sparshi Agarwal/Desktop/chat_app_error/chat-app-react-nodejs/public/src/components/ChatInput.jsx"],"names":["React","useState","BsEmojiSmileFill","IoMdSend","styled","Picker","ChatInput","handleSendMsg","msg","setMsg","showEmojiPicker","setShowEmojiPicker","handleEmojiPickerhideShow","handleEmojiClick","event","emojiObject","message","emoji","sendChat","preventDefault","length","e","target","value","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,eAAe,SAASC,SAAT,OAAsC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACnD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;;AACA,QAAMW,yBAAyB,GAAG,MAAM;AACtCD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC/C,QAAIC,OAAO,GAAGR,GAAd;AACAQ,IAAAA,OAAO,IAAID,WAAW,CAACE,KAAvB;AACAR,IAAAA,MAAM,CAACO,OAAD,CAAN;AACD,GAJD;;AAMA,QAAME,QAAQ,GAAIJ,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIX,GAAG,CAACY,MAAJ,GAAa,CAAjB,EAAoB;AAClBb,MAAAA,aAAa,CAACC,GAAD,CAAb;AACAC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAND;;AAQA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEG;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,eAAe,iBAAI,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAGC,KAAD,IAAWI,QAAQ,CAACJ,KAAD,CAA/D;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,QAAQ,EAAGO,CAAD,IAAOZ,MAAM,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAIE,QAAA,KAAK,EAAEf;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CuBF,S;;KAAAA,S;AA4CxB,MAAMkB,SAAS,GAAGpB,MAAM,CAACqB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7FA;MAAMD,S","sourcesContent":["import React, { useState } from \"react\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nexport default function ChatInput({ handleSendMsg }) {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const handleEmojiPickerhideShow = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    let message = msg;\r\n    message += emojiObject.emoji;\r\n    setMsg(message);\r\n  };\r\n\r\n  const sendChat = (event) => {\r\n    event.preventDefault();\r\n    if (msg.length > 0) {\r\n      handleSendMsg(msg);\r\n      setMsg(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"button-container\">\r\n        <div className=\"emoji\">\r\n          <BsEmojiSmileFill onClick={handleEmojiPickerhideShow} />\r\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\r\n        </div>\r\n      </div>\r\n      <form className=\"input-container\" onSubmit={(event) => sendChat(event)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"type your message here\"\r\n          onChange={(e) => setMsg(e.target.value)}\r\n          value={msg}\r\n        />\r\n        <button type=\"submit\">\r\n          <IoMdSend />\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 5% 95%;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    gap: 1rem;\r\n    .emoji {\r\n      position: relative;\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: #ffff00c8;\r\n        cursor: pointer;\r\n      }\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: -350px;\r\n        background-color: #080420;\r\n        box-shadow: 0 5px 10px #9a86f3;\r\n        border-color: #9a86f3;\r\n        .emoji-scroll-wrapper::-webkit-scrollbar {\r\n          background-color: #080420;\r\n          width: 5px;\r\n          &-thumb {\r\n            background-color: #9a86f3;\r\n          }\r\n        }\r\n        .emoji-categories {\r\n          button {\r\n            filter: contrast(0);\r\n          }\r\n        }\r\n        .emoji-search {\r\n          background-color: transparent;\r\n          border-color: #9a86f3;\r\n        }\r\n        .emoji-group:before {\r\n          background-color: #080420;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    background-color: #ffffff34;\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n    button {\r\n      padding: 0.3rem 2rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #9a86f3;\r\n      border: none;\r\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0.3rem 1rem;\r\n        svg {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n      svg {\r\n        font-size: 2rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}